name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build ${{ matrix.firmware.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        firmware:
          - file: tesla-ble-esp32-generic.yml
            name: Tesla BLE ESP32 Generic
            manifest_filename: tesla-ble-esp32-generic-manifest.json
          - file: tesla-ble-m5stack-atoms3.yml
            name: Tesla BLE M5Stack AtomS3
            manifest_filename: tesla-ble-m5stack-atoms3-manifest.json
          - file: tesla-ble-m5stack-nanoc6.yml
            name: Tesla BLE M5Stack NanoC6
            manifest_filename: tesla-ble-m5stack-nanoc6-manifest.json
      fail-fast: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.2.0
      - name: Build firmware
        id: esphome-build
        uses: esphome/build-action@v6.0.0
        with:
          yaml-file: ${{ matrix.firmware.file }}
      - name: Copy firmware and manifest
        run: |
          mkdir output
          mv ${{ steps.esphome-build.outputs.name }} output/
          jq -s '{"name": "${{ matrix.firmware.name }}", "new_install_improv_wait_time": 15, "new_install_prompt_erase": true, "version": "${{ steps.esphome-build.outputs.version }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' output/${{ steps.esphome-build.outputs.name }}/manifest.json > output/${{ matrix.firmware.manifest_filename }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.firmware.name }}
          path: output


  consolidate:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    name: Consolidate firmwares
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.2.0
      - name: Download built firmwares
        uses: actions/download-artifact@v4.1.8
        with:
          path: firmwares
      - name: Copy files
        run: |-
          mkdir output
          cp -R static/* output/
          cp -R firmwares/*/* output/
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          path: output

  deploy:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: consolidate
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
